### YamlMime:ManagedReference
items:
- uid: SimulationFramework.CollectionsHelper
  commentId: T:SimulationFramework.CollectionsHelper
  id: CollectionsHelper
  parent: SimulationFramework
  children:
  - SimulationFramework.CollectionsHelper.AsEnumerableUnsafe``1(``0*,System.Int32)
  - SimulationFramework.CollectionsHelper.EnumerableAsSpan``2(System.Collections.Generic.IEnumerable{``0},``1,System.Buffers.SpanAction{``0,``1})
  - SimulationFramework.CollectionsHelper.GetEnumeratorUnsafe``1(``0*,System.Int32)
  - SimulationFramework.CollectionsHelper.MAX_STACK_SIZE
  langs:
  - csharp
  - vb
  name: CollectionsHelper
  nameWithType: CollectionsHelper
  fullName: SimulationFramework.CollectionsHelper
  type: Class
  source:
    remote:
      path: src/SimulationFramework/CollectionsHelper.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: CollectionsHelper
    path: src/SimulationFramework/CollectionsHelper.cs
    startLine: 15
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework
  summary: Provides utilities for copying data between different kinds of collections.
  example: []
  syntax:
    content: public static class CollectionsHelper
    content.vb: Public Module CollectionsHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: SimulationFramework.CollectionsHelper.MAX_STACK_SIZE
  commentId: F:SimulationFramework.CollectionsHelper.MAX_STACK_SIZE
  id: MAX_STACK_SIZE
  parent: SimulationFramework.CollectionsHelper
  langs:
  - csharp
  - vb
  name: MAX_STACK_SIZE
  nameWithType: CollectionsHelper.MAX_STACK_SIZE
  fullName: SimulationFramework.CollectionsHelper.MAX_STACK_SIZE
  type: Field
  source:
    remote:
      path: src/SimulationFramework/CollectionsHelper.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: MAX_STACK_SIZE
    path: src/SimulationFramework/CollectionsHelper.cs
    startLine: 20
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework
  summary: A reasonable limit for stack allocation size.
  example: []
  syntax:
    content: public const int MAX_STACK_SIZE = 1024
    return:
      type: System.Int32
    content.vb: Public Const MAX_STACK_SIZE As Integer = 1024
- uid: SimulationFramework.CollectionsHelper.EnumerableAsSpan``2(System.Collections.Generic.IEnumerable{``0},``1,System.Buffers.SpanAction{``0,``1})
  commentId: M:SimulationFramework.CollectionsHelper.EnumerableAsSpan``2(System.Collections.Generic.IEnumerable{``0},``1,System.Buffers.SpanAction{``0,``1})
  id: EnumerableAsSpan``2(System.Collections.Generic.IEnumerable{``0},``1,System.Buffers.SpanAction{``0,``1})
  parent: SimulationFramework.CollectionsHelper
  langs:
  - csharp
  - vb
  name: EnumerableAsSpan<T, TArg>(IEnumerable<T>, TArg, SpanAction<T, TArg>)
  nameWithType: CollectionsHelper.EnumerableAsSpan<T, TArg>(IEnumerable<T>, TArg, SpanAction<T, TArg>)
  fullName: SimulationFramework.CollectionsHelper.EnumerableAsSpan<T, TArg>(System.Collections.Generic.IEnumerable<T>, TArg, System.Buffers.SpanAction<T, TArg>)
  type: Method
  source:
    remote:
      path: src/SimulationFramework/CollectionsHelper.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: EnumerableAsSpan
    path: src/SimulationFramework/CollectionsHelper.cs
    startLine: 30
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework
  summary: Copies an IEnumerable to a block of unmanaged memory and provides that memory to <code class="paramref">action</code>.
  example: []
  syntax:
    content: 'public static void EnumerableAsSpan<T, TArg>(IEnumerable<T> enumerable, TArg state, SpanAction<T, TArg> action) where T : unmanaged'
    parameters:
    - id: enumerable
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The source enumerable.
    - id: state
      type: '{TArg}'
      description: A state object passed to <code class="paramref">action</code>.
    - id: action
      type: System.Buffers.SpanAction{{T},{TArg}}
      description: The delegate to provide with the un
    typeParameters:
    - id: T
      description: The type of element to copy.
    - id: TArg
      description: The state object type.
    content.vb: Public Shared Sub EnumerableAsSpan(Of T As Structure, TArg)(enumerable As IEnumerable(Of T), state As TArg, action As SpanAction(Of T, TArg))
  overload: SimulationFramework.CollectionsHelper.EnumerableAsSpan*
  nameWithType.vb: CollectionsHelper.EnumerableAsSpan(Of T, TArg)(IEnumerable(Of T), TArg, SpanAction(Of T, TArg))
  fullName.vb: SimulationFramework.CollectionsHelper.EnumerableAsSpan(Of T, TArg)(System.Collections.Generic.IEnumerable(Of T), TArg, System.Buffers.SpanAction(Of T, TArg))
  name.vb: EnumerableAsSpan(Of T, TArg)(IEnumerable(Of T), TArg, SpanAction(Of T, TArg))
- uid: SimulationFramework.CollectionsHelper.AsEnumerableUnsafe``1(``0*,System.Int32)
  commentId: M:SimulationFramework.CollectionsHelper.AsEnumerableUnsafe``1(``0*,System.Int32)
  id: AsEnumerableUnsafe``1(``0*,System.Int32)
  parent: SimulationFramework.CollectionsHelper
  langs:
  - csharp
  - vb
  name: AsEnumerableUnsafe<T>(T*, int)
  nameWithType: CollectionsHelper.AsEnumerableUnsafe<T>(T*, int)
  fullName: SimulationFramework.CollectionsHelper.AsEnumerableUnsafe<T>(T*, int)
  type: Method
  source:
    remote:
      path: src/SimulationFramework/CollectionsHelper.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: AsEnumerableUnsafe
    path: src/SimulationFramework/CollectionsHelper.cs
    startLine: 82
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework
  summary: Gets an <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> for the provided unmanaged array.
  example: []
  syntax:
    content: 'public static IEnumerable<T> AsEnumerableUnsafe<T>(T* elements, int length) where T : unmanaged'
    parameters:
    - id: elements
      type: '{T}*'
      description: A pointer to the array.
    - id: length
      type: System.Int32
      description: The length of the array, in elements.
    typeParameters:
    - id: T
      description: The type of element to enumerate.
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Shared Function AsEnumerableUnsafe(Of T As Structure)(elements As T*, length As Integer) As IEnumerable(Of T)
  overload: SimulationFramework.CollectionsHelper.AsEnumerableUnsafe*
  nameWithType.vb: CollectionsHelper.AsEnumerableUnsafe(Of T)(T*, Integer)
  fullName.vb: SimulationFramework.CollectionsHelper.AsEnumerableUnsafe(Of T)(T*, Integer)
  name.vb: AsEnumerableUnsafe(Of T)(T*, Integer)
- uid: SimulationFramework.CollectionsHelper.GetEnumeratorUnsafe``1(``0*,System.Int32)
  commentId: M:SimulationFramework.CollectionsHelper.GetEnumeratorUnsafe``1(``0*,System.Int32)
  id: GetEnumeratorUnsafe``1(``0*,System.Int32)
  parent: SimulationFramework.CollectionsHelper
  langs:
  - csharp
  - vb
  name: GetEnumeratorUnsafe<T>(T*, int)
  nameWithType: CollectionsHelper.GetEnumeratorUnsafe<T>(T*, int)
  fullName: SimulationFramework.CollectionsHelper.GetEnumeratorUnsafe<T>(T*, int)
  type: Method
  source:
    remote:
      path: src/SimulationFramework/CollectionsHelper.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: GetEnumeratorUnsafe
    path: src/SimulationFramework/CollectionsHelper.cs
    startLine: 94
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework
  summary: Gets an <xref href="System.Collections.Generic.IEnumerator%601" data-throw-if-not-resolved="false"></xref> for the provided unmanaged array.
  example: []
  syntax:
    content: 'public static IEnumerator<T> GetEnumeratorUnsafe<T>(T* elements, int length) where T : unmanaged'
    parameters:
    - id: elements
      type: '{T}*'
      description: A pointer to the array.
    - id: length
      type: System.Int32
      description: The length of the array, in elements.
    typeParameters:
    - id: T
      description: The type of element to enumerate.
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
      description: ''
    content.vb: Public Shared Function GetEnumeratorUnsafe(Of T As Structure)(elements As T*, length As Integer) As IEnumerator(Of T)
  overload: SimulationFramework.CollectionsHelper.GetEnumeratorUnsafe*
  nameWithType.vb: CollectionsHelper.GetEnumeratorUnsafe(Of T)(T*, Integer)
  fullName.vb: SimulationFramework.CollectionsHelper.GetEnumeratorUnsafe(Of T)(T*, Integer)
  name.vb: GetEnumeratorUnsafe(Of T)(T*, Integer)
references:
- uid: SimulationFramework
  commentId: N:SimulationFramework
  href: SimulationFramework.html
  name: SimulationFramework
  nameWithType: SimulationFramework
  fullName: SimulationFramework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SimulationFramework.CollectionsHelper.EnumerableAsSpan*
  commentId: Overload:SimulationFramework.CollectionsHelper.EnumerableAsSpan
  href: SimulationFramework.CollectionsHelper.html#SimulationFramework.CollectionsHelper.EnumerableAsSpan``2(System.Collections.Generic.IEnumerable{``0},``1,System.Buffers.SpanAction{``0,``1})
  name: EnumerableAsSpan
  nameWithType: CollectionsHelper.EnumerableAsSpan
  fullName: SimulationFramework.CollectionsHelper.EnumerableAsSpan
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: '{TArg}'
  commentId: '!:TArg'
  definition: TArg
  name: TArg
  nameWithType: TArg
  fullName: TArg
- uid: System.Buffers.SpanAction{{T},{TArg}}
  commentId: T:System.Buffers.SpanAction{``0,``1}
  parent: System.Buffers
  definition: System.Buffers.SpanAction`2
  href: https://learn.microsoft.com/dotnet/api/system.buffers.spanaction-2
  name: SpanAction<T, TArg>
  nameWithType: SpanAction<T, TArg>
  fullName: System.Buffers.SpanAction<T, TArg>
  nameWithType.vb: SpanAction(Of T, TArg)
  fullName.vb: System.Buffers.SpanAction(Of T, TArg)
  name.vb: SpanAction(Of T, TArg)
  spec.csharp:
  - uid: System.Buffers.SpanAction`2
    name: SpanAction
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.spanaction-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TArg
  - name: '>'
  spec.vb:
  - uid: System.Buffers.SpanAction`2
    name: SpanAction
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.spanaction-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TArg
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TArg
  commentId: '!:TArg'
  name: TArg
  nameWithType: TArg
  fullName: TArg
- uid: System.Buffers.SpanAction`2
  commentId: T:System.Buffers.SpanAction`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.buffers.spanaction-2
  name: SpanAction<T, TArg>
  nameWithType: SpanAction<T, TArg>
  fullName: System.Buffers.SpanAction<T, TArg>
  nameWithType.vb: SpanAction(Of T, TArg)
  fullName.vb: System.Buffers.SpanAction(Of T, TArg)
  name.vb: SpanAction(Of T, TArg)
  spec.csharp:
  - uid: System.Buffers.SpanAction`2
    name: SpanAction
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.spanaction-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TArg
  - name: '>'
  spec.vb:
  - uid: System.Buffers.SpanAction`2
    name: SpanAction
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.spanaction-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TArg
  - name: )
- uid: System.Buffers
  commentId: N:System.Buffers
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Buffers
  nameWithType: System.Buffers
  fullName: System.Buffers
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Buffers
    name: Buffers
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Buffers
    name: Buffers
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers
- uid: SimulationFramework.CollectionsHelper.AsEnumerableUnsafe*
  commentId: Overload:SimulationFramework.CollectionsHelper.AsEnumerableUnsafe
  href: SimulationFramework.CollectionsHelper.html#SimulationFramework.CollectionsHelper.AsEnumerableUnsafe``1(``0*,System.Int32)
  name: AsEnumerableUnsafe
  nameWithType: CollectionsHelper.AsEnumerableUnsafe
  fullName: SimulationFramework.CollectionsHelper.AsEnumerableUnsafe
- uid: '{T}*'
  isExternal: true
  name: T*
  nameWithType: T*
  fullName: T*
  spec.csharp:
  - name: T
  - name: '*'
  spec.vb:
  - name: T
  - name: '*'
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SimulationFramework.CollectionsHelper.GetEnumeratorUnsafe*
  commentId: Overload:SimulationFramework.CollectionsHelper.GetEnumeratorUnsafe
  href: SimulationFramework.CollectionsHelper.html#SimulationFramework.CollectionsHelper.GetEnumeratorUnsafe``1(``0*,System.Int32)
  name: GetEnumeratorUnsafe
  nameWithType: CollectionsHelper.GetEnumeratorUnsafe
  fullName: SimulationFramework.CollectionsHelper.GetEnumeratorUnsafe
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
