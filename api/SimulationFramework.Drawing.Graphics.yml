### YamlMime:ManagedReference
items:
- uid: SimulationFramework.Drawing.Graphics
  commentId: T:SimulationFramework.Drawing.Graphics
  id: Graphics
  parent: SimulationFramework.Drawing
  children:
  - SimulationFramework.Drawing.Graphics.ClearFontCache
  - SimulationFramework.Drawing.Graphics.CreateTexture(System.Int32,System.Int32,SimulationFramework.Color[],SimulationFramework.Drawing.TextureOptions)
  - SimulationFramework.Drawing.Graphics.CreateTexture(System.Int32,System.Int32,SimulationFramework.Drawing.TextureOptions)
  - SimulationFramework.Drawing.Graphics.CreateTexture(System.Int32,System.Int32,System.Span{SimulationFramework.Color},SimulationFramework.Drawing.TextureOptions)
  - SimulationFramework.Drawing.Graphics.GetOutputCanvas
  - SimulationFramework.Drawing.Graphics.LoadTexture(System.Byte[],SimulationFramework.Drawing.TextureOptions)
  - SimulationFramework.Drawing.Graphics.LoadTexture(System.Span{System.Byte},SimulationFramework.Drawing.TextureOptions)
  - SimulationFramework.Drawing.Graphics.LoadTexture(System.String,SimulationFramework.Drawing.TextureOptions)
  langs:
  - csharp
  - vb
  name: Graphics
  nameWithType: Graphics
  fullName: SimulationFramework.Drawing.Graphics
  type: Class
  source:
    remote:
      path: src/SimulationFramework/Drawing/Graphics.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: Graphics
    path: src/SimulationFramework/Drawing/Graphics.cs
    startLine: 12
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework.Drawing
  summary: Provides graphical functionality to the application.
  example: []
  syntax:
    content: public static class Graphics
    content.vb: Public Module Graphics
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: SimulationFramework.Drawing.Graphics.GetOutputCanvas
  commentId: M:SimulationFramework.Drawing.Graphics.GetOutputCanvas
  id: GetOutputCanvas
  parent: SimulationFramework.Drawing.Graphics
  langs:
  - csharp
  - vb
  name: GetOutputCanvas()
  nameWithType: Graphics.GetOutputCanvas()
  fullName: SimulationFramework.Drawing.Graphics.GetOutputCanvas()
  type: Method
  source:
    remote:
      path: src/SimulationFramework/Drawing/Graphics.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: GetOutputCanvas
    path: src/SimulationFramework/Drawing/Graphics.cs
    startLine: 20
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework.Drawing
  summary: Gets canvas which draws to the current frame.
  example: []
  syntax:
    content: public static ICanvas GetOutputCanvas()
    return:
      type: SimulationFramework.Drawing.ICanvas
      description: ''
    content.vb: Public Shared Function GetOutputCanvas() As ICanvas
  overload: SimulationFramework.Drawing.Graphics.GetOutputCanvas*
- uid: SimulationFramework.Drawing.Graphics.LoadTexture(System.String,SimulationFramework.Drawing.TextureOptions)
  commentId: M:SimulationFramework.Drawing.Graphics.LoadTexture(System.String,SimulationFramework.Drawing.TextureOptions)
  id: LoadTexture(System.String,SimulationFramework.Drawing.TextureOptions)
  parent: SimulationFramework.Drawing.Graphics
  langs:
  - csharp
  - vb
  name: LoadTexture(string, TextureOptions)
  nameWithType: Graphics.LoadTexture(string, TextureOptions)
  fullName: SimulationFramework.Drawing.Graphics.LoadTexture(string, SimulationFramework.Drawing.TextureOptions)
  type: Method
  source:
    remote:
      path: src/SimulationFramework/Drawing/Graphics.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: LoadTexture
    path: src/SimulationFramework/Drawing/Graphics.cs
    startLine: 31
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework.Drawing
  summary: Loads a texture from a file.
  example: []
  syntax:
    content: public static ITexture LoadTexture(string file, TextureOptions options = TextureOptions.None)
    parameters:
    - id: file
      type: System.String
      description: The path to a .PNG image file.
    - id: options
      type: SimulationFramework.Drawing.TextureOptions
      description: A <xref href="SimulationFramework.Drawing.TextureOptions" data-throw-if-not-resolved="false"></xref> value which influences the behavior of the texture.
    return:
      type: SimulationFramework.Drawing.ITexture
      description: The new texture.
    content.vb: Public Shared Function LoadTexture(file As String, options As TextureOptions = TextureOptions.None) As ITexture
  overload: SimulationFramework.Drawing.Graphics.LoadTexture*
  nameWithType.vb: Graphics.LoadTexture(String, TextureOptions)
  fullName.vb: SimulationFramework.Drawing.Graphics.LoadTexture(String, SimulationFramework.Drawing.TextureOptions)
  name.vb: LoadTexture(String, TextureOptions)
- uid: SimulationFramework.Drawing.Graphics.LoadTexture(System.Byte[],SimulationFramework.Drawing.TextureOptions)
  commentId: M:SimulationFramework.Drawing.Graphics.LoadTexture(System.Byte[],SimulationFramework.Drawing.TextureOptions)
  id: LoadTexture(System.Byte[],SimulationFramework.Drawing.TextureOptions)
  parent: SimulationFramework.Drawing.Graphics
  langs:
  - csharp
  - vb
  name: LoadTexture(byte[], TextureOptions)
  nameWithType: Graphics.LoadTexture(byte[], TextureOptions)
  fullName: SimulationFramework.Drawing.Graphics.LoadTexture(byte[], SimulationFramework.Drawing.TextureOptions)
  type: Method
  source:
    remote:
      path: src/SimulationFramework/Drawing/Graphics.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: LoadTexture
    path: src/SimulationFramework/Drawing/Graphics.cs
    startLine: 44
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework.Drawing
  summary: Loads a texture from raw, encoded file data.
  example: []
  syntax:
    content: public static ITexture LoadTexture(byte[] encodedBytes, TextureOptions options = TextureOptions.None)
    parameters:
    - id: encodedBytes
      type: System.Byte[]
      description: An array of the bytes of a supported image file.
    - id: options
      type: SimulationFramework.Drawing.TextureOptions
      description: A <xref href="SimulationFramework.Drawing.TextureOptions" data-throw-if-not-resolved="false"></xref> value which influences the behavior of the texture.
    return:
      type: SimulationFramework.Drawing.ITexture
      description: The new texture.
    content.vb: Public Shared Function LoadTexture(encodedBytes As Byte(), options As TextureOptions = TextureOptions.None) As ITexture
  overload: SimulationFramework.Drawing.Graphics.LoadTexture*
  nameWithType.vb: Graphics.LoadTexture(Byte(), TextureOptions)
  fullName.vb: SimulationFramework.Drawing.Graphics.LoadTexture(Byte(), SimulationFramework.Drawing.TextureOptions)
  name.vb: LoadTexture(Byte(), TextureOptions)
- uid: SimulationFramework.Drawing.Graphics.LoadTexture(System.Span{System.Byte},SimulationFramework.Drawing.TextureOptions)
  commentId: M:SimulationFramework.Drawing.Graphics.LoadTexture(System.Span{System.Byte},SimulationFramework.Drawing.TextureOptions)
  id: LoadTexture(System.Span{System.Byte},SimulationFramework.Drawing.TextureOptions)
  parent: SimulationFramework.Drawing.Graphics
  langs:
  - csharp
  - vb
  name: LoadTexture(Span<byte>, TextureOptions)
  nameWithType: Graphics.LoadTexture(Span<byte>, TextureOptions)
  fullName: SimulationFramework.Drawing.Graphics.LoadTexture(System.Span<byte>, SimulationFramework.Drawing.TextureOptions)
  type: Method
  source:
    remote:
      path: src/SimulationFramework/Drawing/Graphics.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: LoadTexture
    path: src/SimulationFramework/Drawing/Graphics.cs
    startLine: 55
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework.Drawing
  summary: Loads a texture from raw, encoded file data.
  example: []
  syntax:
    content: public static ITexture LoadTexture(Span<byte> encodedBytes, TextureOptions options = TextureOptions.None)
    parameters:
    - id: encodedBytes
      type: System.Span{System.Byte}
      description: A span of the bytes of a supported image file.
    - id: options
      type: SimulationFramework.Drawing.TextureOptions
      description: A <xref href="SimulationFramework.Drawing.TextureOptions" data-throw-if-not-resolved="false"></xref> value which influences the behavior of the texture.
    return:
      type: SimulationFramework.Drawing.ITexture
      description: The new texture.
    content.vb: Public Shared Function LoadTexture(encodedBytes As Span(Of Byte), options As TextureOptions = TextureOptions.None) As ITexture
  overload: SimulationFramework.Drawing.Graphics.LoadTexture*
  nameWithType.vb: Graphics.LoadTexture(Span(Of Byte), TextureOptions)
  fullName.vb: SimulationFramework.Drawing.Graphics.LoadTexture(System.Span(Of Byte), SimulationFramework.Drawing.TextureOptions)
  name.vb: LoadTexture(Span(Of Byte), TextureOptions)
- uid: SimulationFramework.Drawing.Graphics.CreateTexture(System.Int32,System.Int32,SimulationFramework.Drawing.TextureOptions)
  commentId: M:SimulationFramework.Drawing.Graphics.CreateTexture(System.Int32,System.Int32,SimulationFramework.Drawing.TextureOptions)
  id: CreateTexture(System.Int32,System.Int32,SimulationFramework.Drawing.TextureOptions)
  parent: SimulationFramework.Drawing.Graphics
  langs:
  - csharp
  - vb
  name: CreateTexture(int, int, TextureOptions)
  nameWithType: Graphics.CreateTexture(int, int, TextureOptions)
  fullName: SimulationFramework.Drawing.Graphics.CreateTexture(int, int, SimulationFramework.Drawing.TextureOptions)
  type: Method
  source:
    remote:
      path: src/SimulationFramework/Drawing/Graphics.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: CreateTexture
    path: src/SimulationFramework/Drawing/Graphics.cs
    startLine: 67
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework.Drawing
  summary: Creates a blank texture of the provided size.
  example: []
  syntax:
    content: public static ITexture CreateTexture(int width, int height, TextureOptions options = TextureOptions.None)
    parameters:
    - id: width
      type: System.Int32
      description: The width of the texture, in pixels.
    - id: height
      type: System.Int32
      description: The height of the texture, in pixels.
    - id: options
      type: SimulationFramework.Drawing.TextureOptions
      description: A <xref href="SimulationFramework.Drawing.TextureOptions" data-throw-if-not-resolved="false"></xref> value which influences the behavior of the texture.
    return:
      type: SimulationFramework.Drawing.ITexture
      description: The new texture.
    content.vb: Public Shared Function CreateTexture(width As Integer, height As Integer, options As TextureOptions = TextureOptions.None) As ITexture
  overload: SimulationFramework.Drawing.Graphics.CreateTexture*
  nameWithType.vb: Graphics.CreateTexture(Integer, Integer, TextureOptions)
  fullName.vb: SimulationFramework.Drawing.Graphics.CreateTexture(Integer, Integer, SimulationFramework.Drawing.TextureOptions)
  name.vb: CreateTexture(Integer, Integer, TextureOptions)
- uid: SimulationFramework.Drawing.Graphics.CreateTexture(System.Int32,System.Int32,System.Span{SimulationFramework.Color},SimulationFramework.Drawing.TextureOptions)
  commentId: M:SimulationFramework.Drawing.Graphics.CreateTexture(System.Int32,System.Int32,System.Span{SimulationFramework.Color},SimulationFramework.Drawing.TextureOptions)
  id: CreateTexture(System.Int32,System.Int32,System.Span{SimulationFramework.Color},SimulationFramework.Drawing.TextureOptions)
  parent: SimulationFramework.Drawing.Graphics
  langs:
  - csharp
  - vb
  name: CreateTexture(int, int, Span<Color>, TextureOptions)
  nameWithType: Graphics.CreateTexture(int, int, Span<Color>, TextureOptions)
  fullName: SimulationFramework.Drawing.Graphics.CreateTexture(int, int, System.Span<SimulationFramework.Color>, SimulationFramework.Drawing.TextureOptions)
  type: Method
  source:
    remote:
      path: src/SimulationFramework/Drawing/Graphics.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: CreateTexture
    path: src/SimulationFramework/Drawing/Graphics.cs
    startLine: 80
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework.Drawing
  summary: Creates a texture of the provided size and fills it with the provided colors.
  example: []
  syntax:
    content: public static ITexture CreateTexture(int width, int height, Span<Color> colors, TextureOptions flags = TextureOptions.None)
    parameters:
    - id: width
      type: System.Int32
      description: The width of the texture, in pixels.
    - id: height
      type: System.Int32
      description: The height of the texture, in pixels.
    - id: colors
      type: System.Span{SimulationFramework.Color}
      description: The data of to fill the texture with. Must be of length <code class="paramref">width</code> * <code class="paramref">height</code>.
    - id: flags
      type: SimulationFramework.Drawing.TextureOptions
      description: A <xref href="SimulationFramework.Drawing.TextureOptions" data-throw-if-not-resolved="false"></xref> value which influences the behavior of the texture.
    return:
      type: SimulationFramework.Drawing.ITexture
      description: The new texture.
    content.vb: Public Shared Function CreateTexture(width As Integer, height As Integer, colors As Span(Of Color), flags As TextureOptions = TextureOptions.None) As ITexture
  overload: SimulationFramework.Drawing.Graphics.CreateTexture*
  nameWithType.vb: Graphics.CreateTexture(Integer, Integer, Span(Of Color), TextureOptions)
  fullName.vb: SimulationFramework.Drawing.Graphics.CreateTexture(Integer, Integer, System.Span(Of SimulationFramework.Color), SimulationFramework.Drawing.TextureOptions)
  name.vb: CreateTexture(Integer, Integer, Span(Of Color), TextureOptions)
- uid: SimulationFramework.Drawing.Graphics.CreateTexture(System.Int32,System.Int32,SimulationFramework.Color[],SimulationFramework.Drawing.TextureOptions)
  commentId: M:SimulationFramework.Drawing.Graphics.CreateTexture(System.Int32,System.Int32,SimulationFramework.Color[],SimulationFramework.Drawing.TextureOptions)
  id: CreateTexture(System.Int32,System.Int32,SimulationFramework.Color[],SimulationFramework.Drawing.TextureOptions)
  parent: SimulationFramework.Drawing.Graphics
  langs:
  - csharp
  - vb
  name: CreateTexture(int, int, Color[], TextureOptions)
  nameWithType: Graphics.CreateTexture(int, int, Color[], TextureOptions)
  fullName: SimulationFramework.Drawing.Graphics.CreateTexture(int, int, SimulationFramework.Color[], SimulationFramework.Drawing.TextureOptions)
  type: Method
  source:
    remote:
      path: src/SimulationFramework/Drawing/Graphics.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: CreateTexture
    path: src/SimulationFramework/Drawing/Graphics.cs
    startLine: 93
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework.Drawing
  summary: Creates a texture of the provided size and fills it with the provided colors.
  example: []
  syntax:
    content: public static ITexture CreateTexture(int width, int height, Color[] colors, TextureOptions options = TextureOptions.None)
    parameters:
    - id: width
      type: System.Int32
      description: The width of the texture, in pixels.
    - id: height
      type: System.Int32
      description: The height of the texture, in pixels.
    - id: colors
      type: SimulationFramework.Color[]
      description: The data of to fill the texture with. Must be of length <code class="paramref">width</code> * <code class="paramref">height</code>.
    - id: options
      type: SimulationFramework.Drawing.TextureOptions
      description: A <xref href="SimulationFramework.Drawing.TextureOptions" data-throw-if-not-resolved="false"></xref> value which influences the behavior of the texture.
    return:
      type: SimulationFramework.Drawing.ITexture
      description: The new texture.
    content.vb: Public Shared Function CreateTexture(width As Integer, height As Integer, colors As Color(), options As TextureOptions = TextureOptions.None) As ITexture
  overload: SimulationFramework.Drawing.Graphics.CreateTexture*
  nameWithType.vb: Graphics.CreateTexture(Integer, Integer, Color(), TextureOptions)
  fullName.vb: SimulationFramework.Drawing.Graphics.CreateTexture(Integer, Integer, SimulationFramework.Color(), SimulationFramework.Drawing.TextureOptions)
  name.vb: CreateTexture(Integer, Integer, Color(), TextureOptions)
- uid: SimulationFramework.Drawing.Graphics.ClearFontCache
  commentId: M:SimulationFramework.Drawing.Graphics.ClearFontCache
  id: ClearFontCache
  parent: SimulationFramework.Drawing.Graphics
  langs:
  - csharp
  - vb
  name: ClearFontCache()
  nameWithType: Graphics.ClearFontCache()
  fullName: SimulationFramework.Drawing.Graphics.ClearFontCache()
  type: Method
  source:
    remote:
      path: src/SimulationFramework/Drawing/Graphics.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: ClearFontCache
    path: src/SimulationFramework/Drawing/Graphics.cs
    startLine: 101
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework.Drawing
  summary: Clears all cached fonts.
  example: []
  syntax:
    content: public static void ClearFontCache()
    content.vb: Public Shared Sub ClearFontCache()
  overload: SimulationFramework.Drawing.Graphics.ClearFontCache*
references:
- uid: SimulationFramework.Drawing
  commentId: N:SimulationFramework.Drawing
  href: SimulationFramework.html
  name: SimulationFramework.Drawing
  nameWithType: SimulationFramework.Drawing
  fullName: SimulationFramework.Drawing
  spec.csharp:
  - uid: SimulationFramework
    name: SimulationFramework
    href: SimulationFramework.html
  - name: .
  - uid: SimulationFramework.Drawing
    name: Drawing
    href: SimulationFramework.Drawing.html
  spec.vb:
  - uid: SimulationFramework
    name: SimulationFramework
    href: SimulationFramework.html
  - name: .
  - uid: SimulationFramework.Drawing
    name: Drawing
    href: SimulationFramework.Drawing.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SimulationFramework.Drawing.Graphics.GetOutputCanvas*
  commentId: Overload:SimulationFramework.Drawing.Graphics.GetOutputCanvas
  href: SimulationFramework.Drawing.Graphics.html#SimulationFramework.Drawing.Graphics.GetOutputCanvas
  name: GetOutputCanvas
  nameWithType: Graphics.GetOutputCanvas
  fullName: SimulationFramework.Drawing.Graphics.GetOutputCanvas
- uid: SimulationFramework.Drawing.ICanvas
  commentId: T:SimulationFramework.Drawing.ICanvas
  parent: SimulationFramework.Drawing
  href: SimulationFramework.Drawing.ICanvas.html
  name: ICanvas
  nameWithType: ICanvas
  fullName: SimulationFramework.Drawing.ICanvas
- uid: SimulationFramework.Drawing.TextureOptions
  commentId: T:SimulationFramework.Drawing.TextureOptions
  parent: SimulationFramework.Drawing
  href: SimulationFramework.Drawing.TextureOptions.html
  name: TextureOptions
  nameWithType: TextureOptions
  fullName: SimulationFramework.Drawing.TextureOptions
- uid: SimulationFramework.Drawing.Graphics.LoadTexture*
  commentId: Overload:SimulationFramework.Drawing.Graphics.LoadTexture
  href: SimulationFramework.Drawing.Graphics.html#SimulationFramework.Drawing.Graphics.LoadTexture(System.String,SimulationFramework.Drawing.TextureOptions)
  name: LoadTexture
  nameWithType: Graphics.LoadTexture
  fullName: SimulationFramework.Drawing.Graphics.LoadTexture
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SimulationFramework.Drawing.ITexture
  commentId: T:SimulationFramework.Drawing.ITexture
  parent: SimulationFramework.Drawing
  href: SimulationFramework.Drawing.ITexture.html
  name: ITexture
  nameWithType: ITexture
  fullName: SimulationFramework.Drawing.ITexture
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.Span{System.Byte}
  commentId: T:System.Span{System.Byte}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<byte>
  nameWithType: Span<byte>
  fullName: System.Span<byte>
  nameWithType.vb: Span(Of Byte)
  fullName.vb: System.Span(Of Byte)
  name.vb: Span(Of Byte)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Span`1
  commentId: T:System.Span`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SimulationFramework.Drawing.Graphics.CreateTexture*
  commentId: Overload:SimulationFramework.Drawing.Graphics.CreateTexture
  href: SimulationFramework.Drawing.Graphics.html#SimulationFramework.Drawing.Graphics.CreateTexture(System.Int32,System.Int32,SimulationFramework.Drawing.TextureOptions)
  name: CreateTexture
  nameWithType: Graphics.CreateTexture
  fullName: SimulationFramework.Drawing.Graphics.CreateTexture
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Span{SimulationFramework.Color}
  commentId: T:System.Span{SimulationFramework.Color}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<Color>
  nameWithType: Span<Color>
  fullName: System.Span<SimulationFramework.Color>
  nameWithType.vb: Span(Of Color)
  fullName.vb: System.Span(Of SimulationFramework.Color)
  name.vb: Span(Of Color)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SimulationFramework.Color
    name: Color
    href: SimulationFramework.Color.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SimulationFramework.Color
    name: Color
    href: SimulationFramework.Color.html
  - name: )
- uid: SimulationFramework.Color[]
  isExternal: true
  href: SimulationFramework.Color.html
  name: Color[]
  nameWithType: Color[]
  fullName: SimulationFramework.Color[]
  nameWithType.vb: Color()
  fullName.vb: SimulationFramework.Color()
  name.vb: Color()
  spec.csharp:
  - uid: SimulationFramework.Color
    name: Color
    href: SimulationFramework.Color.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SimulationFramework.Color
    name: Color
    href: SimulationFramework.Color.html
  - name: (
  - name: )
- uid: SimulationFramework.Drawing.Graphics.ClearFontCache*
  commentId: Overload:SimulationFramework.Drawing.Graphics.ClearFontCache
  href: SimulationFramework.Drawing.Graphics.html#SimulationFramework.Drawing.Graphics.ClearFontCache
  name: ClearFontCache
  nameWithType: Graphics.ClearFontCache
  fullName: SimulationFramework.Drawing.Graphics.ClearFontCache
