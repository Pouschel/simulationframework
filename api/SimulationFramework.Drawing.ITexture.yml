### YamlMime:ManagedReference
items:
- uid: SimulationFramework.Drawing.ITexture
  commentId: T:SimulationFramework.Drawing.ITexture
  id: ITexture
  parent: SimulationFramework.Drawing
  children:
  - SimulationFramework.Drawing.ITexture.ApplyChanges
  - SimulationFramework.Drawing.ITexture.CreateCanvas
  - SimulationFramework.Drawing.ITexture.GetPixel(System.Int32,System.Int32)
  - SimulationFramework.Drawing.ITexture.Height
  - SimulationFramework.Drawing.ITexture.Pixels
  - SimulationFramework.Drawing.ITexture.Width
  langs:
  - csharp
  - vb
  name: ITexture
  nameWithType: ITexture
  fullName: SimulationFramework.Drawing.ITexture
  type: Interface
  source:
    remote:
      path: src/SimulationFramework/Drawing/ITexture.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: ITexture
    path: src/SimulationFramework/Drawing/ITexture.cs
    startLine: 12
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework.Drawing
  summary: A 2D bitmap that can be rendered, or rendered to.
  example: []
  syntax:
    content: 'public interface ITexture : IDisposable'
    content.vb: Public Interface ITexture Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
- uid: SimulationFramework.Drawing.ITexture.Width
  commentId: P:SimulationFramework.Drawing.ITexture.Width
  id: Width
  parent: SimulationFramework.Drawing.ITexture
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: ITexture.Width
  fullName: SimulationFramework.Drawing.ITexture.Width
  type: Property
  source:
    remote:
      path: src/SimulationFramework/Drawing/ITexture.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: Width
    path: src/SimulationFramework/Drawing/ITexture.cs
    startLine: 17
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework.Drawing
  summary: The width of the texture, in pixels.
  example: []
  syntax:
    content: int Width { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Width As Integer
  overload: SimulationFramework.Drawing.ITexture.Width*
- uid: SimulationFramework.Drawing.ITexture.Height
  commentId: P:SimulationFramework.Drawing.ITexture.Height
  id: Height
  parent: SimulationFramework.Drawing.ITexture
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: ITexture.Height
  fullName: SimulationFramework.Drawing.ITexture.Height
  type: Property
  source:
    remote:
      path: src/SimulationFramework/Drawing/ITexture.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: Height
    path: src/SimulationFramework/Drawing/ITexture.cs
    startLine: 22
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework.Drawing
  summary: The height of the texture, in pixels.
  example: []
  syntax:
    content: int Height { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Height As Integer
  overload: SimulationFramework.Drawing.ITexture.Height*
- uid: SimulationFramework.Drawing.ITexture.Pixels
  commentId: P:SimulationFramework.Drawing.ITexture.Pixels
  id: Pixels
  parent: SimulationFramework.Drawing.ITexture
  langs:
  - csharp
  - vb
  name: Pixels
  nameWithType: ITexture.Pixels
  fullName: SimulationFramework.Drawing.ITexture.Pixels
  type: Property
  source:
    remote:
      path: src/SimulationFramework/Drawing/ITexture.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: Pixels
    path: src/SimulationFramework/Drawing/ITexture.cs
    startLine: 30
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework.Drawing
  summary: >-
    A span of colors making up texture's data

    <p>

    If changes are made to the texture's data, they may not be applied until <xref href="SimulationFramework.Drawing.ITexture.ApplyChanges" data-throw-if-not-resolved="false"></xref> is called.

    </p>
  example: []
  syntax:
    content: Span<Color> Pixels { get; }
    parameters: []
    return:
      type: System.Span{SimulationFramework.Color}
    content.vb: ReadOnly Property Pixels As Span(Of Color)
  overload: SimulationFramework.Drawing.ITexture.Pixels*
- uid: SimulationFramework.Drawing.ITexture.GetPixel(System.Int32,System.Int32)
  commentId: M:SimulationFramework.Drawing.ITexture.GetPixel(System.Int32,System.Int32)
  id: GetPixel(System.Int32,System.Int32)
  parent: SimulationFramework.Drawing.ITexture
  langs:
  - csharp
  - vb
  name: GetPixel(int, int)
  nameWithType: ITexture.GetPixel(int, int)
  fullName: SimulationFramework.Drawing.ITexture.GetPixel(int, int)
  type: Method
  source:
    remote:
      path: src/SimulationFramework/Drawing/ITexture.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: GetPixel
    path: src/SimulationFramework/Drawing/ITexture.cs
    startLine: 40
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework.Drawing
  summary: >-
    Gets a reference to the element of <xref href="SimulationFramework.Drawing.ITexture.Pixels" data-throw-if-not-resolved="false"></xref> at the provided <code class="paramref">x</code> and <code class="paramref">y</code> coordinates.

    <p>

    If changes are made to the texture's data, they may not be applied until <xref href="SimulationFramework.Drawing.ITexture.ApplyChanges" data-throw-if-not-resolved="false"></xref> is called.

    </p>
  example: []
  syntax:
    content: ref Color GetPixel(int x, int y)
    parameters:
    - id: x
      type: System.Int32
      description: The x-coordinate of the pixel.
    - id: y
      type: System.Int32
      description: The y-coordinate of the pixel.
    return:
      type: SimulationFramework.Color
    content.vb: ByRef Function GetPixel(x As Integer, y As Integer) As Color
  overload: SimulationFramework.Drawing.ITexture.GetPixel*
  nameWithType.vb: ITexture.GetPixel(Integer, Integer)
  fullName.vb: SimulationFramework.Drawing.ITexture.GetPixel(Integer, Integer)
  name.vb: GetPixel(Integer, Integer)
- uid: SimulationFramework.Drawing.ITexture.CreateCanvas
  commentId: M:SimulationFramework.Drawing.ITexture.CreateCanvas
  id: CreateCanvas
  parent: SimulationFramework.Drawing.ITexture
  langs:
  - csharp
  - vb
  name: CreateCanvas()
  nameWithType: ITexture.CreateCanvas()
  fullName: SimulationFramework.Drawing.ITexture.CreateCanvas()
  type: Method
  source:
    remote:
      path: src/SimulationFramework/Drawing/ITexture.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: CreateCanvas
    path: src/SimulationFramework/Drawing/ITexture.cs
    startLine: 55
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework.Drawing
  summary: Opens a new canvas which draws to this texture.
  example: []
  syntax:
    content: ICanvas CreateCanvas()
    return:
      type: SimulationFramework.Drawing.ICanvas
      description: An <xref href="SimulationFramework.Drawing.ICanvas" data-throw-if-not-resolved="false"></xref> which draws onto this texture.
    content.vb: Function CreateCanvas() As ICanvas
  overload: SimulationFramework.Drawing.ITexture.CreateCanvas*
- uid: SimulationFramework.Drawing.ITexture.ApplyChanges
  commentId: M:SimulationFramework.Drawing.ITexture.ApplyChanges
  id: ApplyChanges
  parent: SimulationFramework.Drawing.ITexture
  langs:
  - csharp
  - vb
  name: ApplyChanges()
  nameWithType: ITexture.ApplyChanges()
  fullName: SimulationFramework.Drawing.ITexture.ApplyChanges()
  type: Method
  source:
    remote:
      path: src/SimulationFramework/Drawing/ITexture.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: ApplyChanges
    path: src/SimulationFramework/Drawing/ITexture.cs
    startLine: 60
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework.Drawing
  summary: Applies any changes made do the bitmap's data using <xref href="SimulationFramework.Drawing.ITexture.Pixels" data-throw-if-not-resolved="false"></xref> or <xref href="SimulationFramework.Drawing.ITexture.GetPixel(System.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: void ApplyChanges()
    content.vb: Sub ApplyChanges()
  overload: SimulationFramework.Drawing.ITexture.ApplyChanges*
references:
- uid: SimulationFramework.Drawing
  commentId: N:SimulationFramework.Drawing
  href: SimulationFramework.html
  name: SimulationFramework.Drawing
  nameWithType: SimulationFramework.Drawing
  fullName: SimulationFramework.Drawing
  spec.csharp:
  - uid: SimulationFramework
    name: SimulationFramework
    href: SimulationFramework.html
  - name: .
  - uid: SimulationFramework.Drawing
    name: Drawing
    href: SimulationFramework.Drawing.html
  spec.vb:
  - uid: SimulationFramework
    name: SimulationFramework
    href: SimulationFramework.html
  - name: .
  - uid: SimulationFramework.Drawing
    name: Drawing
    href: SimulationFramework.Drawing.html
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SimulationFramework.Drawing.ITexture.Width*
  commentId: Overload:SimulationFramework.Drawing.ITexture.Width
  href: SimulationFramework.Drawing.ITexture.html#SimulationFramework.Drawing.ITexture.Width
  name: Width
  nameWithType: ITexture.Width
  fullName: SimulationFramework.Drawing.ITexture.Width
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SimulationFramework.Drawing.ITexture.Height*
  commentId: Overload:SimulationFramework.Drawing.ITexture.Height
  href: SimulationFramework.Drawing.ITexture.html#SimulationFramework.Drawing.ITexture.Height
  name: Height
  nameWithType: ITexture.Height
  fullName: SimulationFramework.Drawing.ITexture.Height
- uid: SimulationFramework.Drawing.ITexture.ApplyChanges
  commentId: M:SimulationFramework.Drawing.ITexture.ApplyChanges
  href: SimulationFramework.Drawing.ITexture.html#SimulationFramework.Drawing.ITexture.ApplyChanges
  name: ApplyChanges()
  nameWithType: ITexture.ApplyChanges()
  fullName: SimulationFramework.Drawing.ITexture.ApplyChanges()
  spec.csharp:
  - uid: SimulationFramework.Drawing.ITexture.ApplyChanges
    name: ApplyChanges
    href: SimulationFramework.Drawing.ITexture.html#SimulationFramework.Drawing.ITexture.ApplyChanges
  - name: (
  - name: )
  spec.vb:
  - uid: SimulationFramework.Drawing.ITexture.ApplyChanges
    name: ApplyChanges
    href: SimulationFramework.Drawing.ITexture.html#SimulationFramework.Drawing.ITexture.ApplyChanges
  - name: (
  - name: )
- uid: SimulationFramework.Drawing.ITexture.Pixels*
  commentId: Overload:SimulationFramework.Drawing.ITexture.Pixels
  href: SimulationFramework.Drawing.ITexture.html#SimulationFramework.Drawing.ITexture.Pixels
  name: Pixels
  nameWithType: ITexture.Pixels
  fullName: SimulationFramework.Drawing.ITexture.Pixels
- uid: System.Span{SimulationFramework.Color}
  commentId: T:System.Span{SimulationFramework.Color}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<Color>
  nameWithType: Span<Color>
  fullName: System.Span<SimulationFramework.Color>
  nameWithType.vb: Span(Of Color)
  fullName.vb: System.Span(Of SimulationFramework.Color)
  name.vb: Span(Of Color)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SimulationFramework.Color
    name: Color
    href: SimulationFramework.Color.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SimulationFramework.Color
    name: Color
    href: SimulationFramework.Color.html
  - name: )
- uid: System.Span`1
  commentId: T:System.Span`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SimulationFramework.Drawing.ITexture.Pixels
  commentId: P:SimulationFramework.Drawing.ITexture.Pixels
  href: SimulationFramework.Drawing.ITexture.html#SimulationFramework.Drawing.ITexture.Pixels
  name: Pixels
  nameWithType: ITexture.Pixels
  fullName: SimulationFramework.Drawing.ITexture.Pixels
- uid: SimulationFramework.Drawing.ITexture.GetPixel*
  commentId: Overload:SimulationFramework.Drawing.ITexture.GetPixel
  href: SimulationFramework.Drawing.ITexture.html#SimulationFramework.Drawing.ITexture.GetPixel(System.Int32,System.Int32)
  name: GetPixel
  nameWithType: ITexture.GetPixel
  fullName: SimulationFramework.Drawing.ITexture.GetPixel
- uid: SimulationFramework.Color
  commentId: T:SimulationFramework.Color
  parent: SimulationFramework
  href: SimulationFramework.Color.html
  name: Color
  nameWithType: Color
  fullName: SimulationFramework.Color
- uid: SimulationFramework
  commentId: N:SimulationFramework
  href: SimulationFramework.html
  name: SimulationFramework
  nameWithType: SimulationFramework
  fullName: SimulationFramework
- uid: SimulationFramework.Drawing.ICanvas
  commentId: T:SimulationFramework.Drawing.ICanvas
  parent: SimulationFramework.Drawing
  href: SimulationFramework.Drawing.ICanvas.html
  name: ICanvas
  nameWithType: ICanvas
  fullName: SimulationFramework.Drawing.ICanvas
- uid: SimulationFramework.Drawing.ITexture.CreateCanvas*
  commentId: Overload:SimulationFramework.Drawing.ITexture.CreateCanvas
  href: SimulationFramework.Drawing.ITexture.html#SimulationFramework.Drawing.ITexture.CreateCanvas
  name: CreateCanvas
  nameWithType: ITexture.CreateCanvas
  fullName: SimulationFramework.Drawing.ITexture.CreateCanvas
- uid: SimulationFramework.Drawing.ITexture.GetPixel(System.Int32,System.Int32)
  commentId: M:SimulationFramework.Drawing.ITexture.GetPixel(System.Int32,System.Int32)
  isExternal: true
  href: SimulationFramework.Drawing.ITexture.html#SimulationFramework.Drawing.ITexture.GetPixel(System.Int32,System.Int32)
  name: GetPixel(int, int)
  nameWithType: ITexture.GetPixel(int, int)
  fullName: SimulationFramework.Drawing.ITexture.GetPixel(int, int)
  nameWithType.vb: ITexture.GetPixel(Integer, Integer)
  fullName.vb: SimulationFramework.Drawing.ITexture.GetPixel(Integer, Integer)
  name.vb: GetPixel(Integer, Integer)
  spec.csharp:
  - uid: SimulationFramework.Drawing.ITexture.GetPixel(System.Int32,System.Int32)
    name: GetPixel
    href: SimulationFramework.Drawing.ITexture.html#SimulationFramework.Drawing.ITexture.GetPixel(System.Int32,System.Int32)
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SimulationFramework.Drawing.ITexture.GetPixel(System.Int32,System.Int32)
    name: GetPixel
    href: SimulationFramework.Drawing.ITexture.html#SimulationFramework.Drawing.ITexture.GetPixel(System.Int32,System.Int32)
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SimulationFramework.Drawing.ITexture.ApplyChanges*
  commentId: Overload:SimulationFramework.Drawing.ITexture.ApplyChanges
  href: SimulationFramework.Drawing.ITexture.html#SimulationFramework.Drawing.ITexture.ApplyChanges
  name: ApplyChanges
  nameWithType: ITexture.ApplyChanges
  fullName: SimulationFramework.Drawing.ITexture.ApplyChanges
