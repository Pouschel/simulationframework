### YamlMime:ManagedReference
items:
- uid: SimulationFramework.Drawing.IGraphicsProvider
  commentId: T:SimulationFramework.Drawing.IGraphicsProvider
  id: IGraphicsProvider
  parent: SimulationFramework.Drawing
  children:
  - SimulationFramework.Drawing.IGraphicsProvider.ClearFontCache
  - SimulationFramework.Drawing.IGraphicsProvider.CreateTexture(System.Int32,System.Int32,System.Span{SimulationFramework.Color},SimulationFramework.Drawing.TextureOptions)
  - SimulationFramework.Drawing.IGraphicsProvider.GetFrameCanvas
  - SimulationFramework.Drawing.IGraphicsProvider.LoadTexture(System.Span{System.Byte},SimulationFramework.Drawing.TextureOptions)
  langs:
  - csharp
  - vb
  name: IGraphicsProvider
  nameWithType: IGraphicsProvider
  fullName: SimulationFramework.Drawing.IGraphicsProvider
  type: Interface
  source:
    remote:
      path: src/SimulationFramework/Drawing/IGraphicsProvider.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: IGraphicsProvider
    path: src/SimulationFramework/Drawing/IGraphicsProvider.cs
    startLine: 7
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework.Drawing
  summary: Interface which provides graphics functionality as a component of a simulation.
  example: []
  syntax:
    content: 'public interface IGraphicsProvider : IApplicationComponent, IDisposable'
    content.vb: Public Interface IGraphicsProvider Inherits IApplicationComponent, IDisposable
  inheritedMembers:
  - SimulationFramework.IApplicationComponent.Initialize(SimulationFramework.Application)
  - System.IDisposable.Dispose
- uid: SimulationFramework.Drawing.IGraphicsProvider.GetFrameCanvas
  commentId: M:SimulationFramework.Drawing.IGraphicsProvider.GetFrameCanvas
  id: GetFrameCanvas
  parent: SimulationFramework.Drawing.IGraphicsProvider
  langs:
  - csharp
  - vb
  name: GetFrameCanvas()
  nameWithType: IGraphicsProvider.GetFrameCanvas()
  fullName: SimulationFramework.Drawing.IGraphicsProvider.GetFrameCanvas()
  type: Method
  source:
    remote:
      path: src/SimulationFramework/Drawing/IGraphicsProvider.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: GetFrameCanvas
    path: src/SimulationFramework/Drawing/IGraphicsProvider.cs
    startLine: 15
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework.Drawing
  summary: Gets the canvas for the current frame.
  example: []
  syntax:
    content: ICanvas GetFrameCanvas()
    return:
      type: SimulationFramework.Drawing.ICanvas
      description: The canvas which draws to the current frame. This object should never be saved, as it may be different every frame.
    content.vb: Function GetFrameCanvas() As ICanvas
  overload: SimulationFramework.Drawing.IGraphicsProvider.GetFrameCanvas*
- uid: SimulationFramework.Drawing.IGraphicsProvider.CreateTexture(System.Int32,System.Int32,System.Span{SimulationFramework.Color},SimulationFramework.Drawing.TextureOptions)
  commentId: M:SimulationFramework.Drawing.IGraphicsProvider.CreateTexture(System.Int32,System.Int32,System.Span{SimulationFramework.Color},SimulationFramework.Drawing.TextureOptions)
  id: CreateTexture(System.Int32,System.Int32,System.Span{SimulationFramework.Color},SimulationFramework.Drawing.TextureOptions)
  parent: SimulationFramework.Drawing.IGraphicsProvider
  langs:
  - csharp
  - vb
  name: CreateTexture(int, int, Span<Color>, TextureOptions)
  nameWithType: IGraphicsProvider.CreateTexture(int, int, Span<Color>, TextureOptions)
  fullName: SimulationFramework.Drawing.IGraphicsProvider.CreateTexture(int, int, System.Span<SimulationFramework.Color>, SimulationFramework.Drawing.TextureOptions)
  type: Method
  source:
    remote:
      path: src/SimulationFramework/Drawing/IGraphicsProvider.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: CreateTexture
    path: src/SimulationFramework/Drawing/IGraphicsProvider.cs
    startLine: 25
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework.Drawing
  summary: Creates a new bitmap with the provided data.
  example: []
  syntax:
    content: ITexture CreateTexture(int width, int height, Span<Color> data, TextureOptions flags)
    parameters:
    - id: width
      type: System.Int32
      description: The width of the bitmap, in pixels.
    - id: height
      type: System.Int32
      description: The height of the bitmap, in pixels.
    - id: data
      type: System.Span{SimulationFramework.Color}
      description: The initial raw bitmap data. Must be of length <code class="paramref">width</code> * <code class="paramref">height</code>.
    - id: flags
      type: SimulationFramework.Drawing.TextureOptions
      description: ''
    return:
      type: SimulationFramework.Drawing.ITexture
      description: The new <xref href="SimulationFramework.Drawing.ITexture" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function CreateTexture(width As Integer, height As Integer, data As Span(Of Color), flags As TextureOptions) As ITexture
  overload: SimulationFramework.Drawing.IGraphicsProvider.CreateTexture*
  nameWithType.vb: IGraphicsProvider.CreateTexture(Integer, Integer, Span(Of Color), TextureOptions)
  fullName.vb: SimulationFramework.Drawing.IGraphicsProvider.CreateTexture(Integer, Integer, System.Span(Of SimulationFramework.Color), SimulationFramework.Drawing.TextureOptions)
  name.vb: CreateTexture(Integer, Integer, Span(Of Color), TextureOptions)
- uid: SimulationFramework.Drawing.IGraphicsProvider.LoadTexture(System.Span{System.Byte},SimulationFramework.Drawing.TextureOptions)
  commentId: M:SimulationFramework.Drawing.IGraphicsProvider.LoadTexture(System.Span{System.Byte},SimulationFramework.Drawing.TextureOptions)
  id: LoadTexture(System.Span{System.Byte},SimulationFramework.Drawing.TextureOptions)
  parent: SimulationFramework.Drawing.IGraphicsProvider
  langs:
  - csharp
  - vb
  name: LoadTexture(Span<byte>, TextureOptions)
  nameWithType: IGraphicsProvider.LoadTexture(Span<byte>, TextureOptions)
  fullName: SimulationFramework.Drawing.IGraphicsProvider.LoadTexture(System.Span<byte>, SimulationFramework.Drawing.TextureOptions)
  type: Method
  source:
    remote:
      path: src/SimulationFramework/Drawing/IGraphicsProvider.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: LoadTexture
    path: src/SimulationFramework/Drawing/IGraphicsProvider.cs
    startLine: 33
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework.Drawing
  summary: Loads a bitmap from it's raw encoded data.
  example: []
  syntax:
    content: ITexture LoadTexture(Span<byte> encodedData, TextureOptions flags = TextureOptions.None)
    parameters:
    - id: encodedData
      type: System.Span{System.Byte}
      description: ''
    - id: flags
      type: SimulationFramework.Drawing.TextureOptions
      description: ''
    return:
      type: SimulationFramework.Drawing.ITexture
      description: ''
    content.vb: Function LoadTexture(encodedData As Span(Of Byte), flags As TextureOptions = TextureOptions.None) As ITexture
  overload: SimulationFramework.Drawing.IGraphicsProvider.LoadTexture*
  nameWithType.vb: IGraphicsProvider.LoadTexture(Span(Of Byte), TextureOptions)
  fullName.vb: SimulationFramework.Drawing.IGraphicsProvider.LoadTexture(System.Span(Of Byte), SimulationFramework.Drawing.TextureOptions)
  name.vb: LoadTexture(Span(Of Byte), TextureOptions)
- uid: SimulationFramework.Drawing.IGraphicsProvider.ClearFontCache
  commentId: M:SimulationFramework.Drawing.IGraphicsProvider.ClearFontCache
  id: ClearFontCache
  parent: SimulationFramework.Drawing.IGraphicsProvider
  langs:
  - csharp
  - vb
  name: ClearFontCache()
  nameWithType: IGraphicsProvider.ClearFontCache()
  fullName: SimulationFramework.Drawing.IGraphicsProvider.ClearFontCache()
  type: Method
  source:
    remote:
      path: src/SimulationFramework/Drawing/IGraphicsProvider.cs
      branch: master
      repo: https://github.com/Redninja106/simulationframework
    id: ClearFontCache
    path: src/SimulationFramework/Drawing/IGraphicsProvider.cs
    startLine: 38
  assemblies:
  - SimulationFramework
  namespace: SimulationFramework.Drawing
  summary: Clears all cached fonts.
  example: []
  syntax:
    content: void ClearFontCache()
    content.vb: Sub ClearFontCache()
  overload: SimulationFramework.Drawing.IGraphicsProvider.ClearFontCache*
references:
- uid: SimulationFramework.Drawing
  commentId: N:SimulationFramework.Drawing
  href: SimulationFramework.html
  name: SimulationFramework.Drawing
  nameWithType: SimulationFramework.Drawing
  fullName: SimulationFramework.Drawing
  spec.csharp:
  - uid: SimulationFramework
    name: SimulationFramework
    href: SimulationFramework.html
  - name: .
  - uid: SimulationFramework.Drawing
    name: Drawing
    href: SimulationFramework.Drawing.html
  spec.vb:
  - uid: SimulationFramework
    name: SimulationFramework
    href: SimulationFramework.html
  - name: .
  - uid: SimulationFramework.Drawing
    name: Drawing
    href: SimulationFramework.Drawing.html
- uid: SimulationFramework.IApplicationComponent.Initialize(SimulationFramework.Application)
  commentId: M:SimulationFramework.IApplicationComponent.Initialize(SimulationFramework.Application)
  parent: SimulationFramework.IApplicationComponent
  href: SimulationFramework.IApplicationComponent.html#SimulationFramework.IApplicationComponent.Initialize(SimulationFramework.Application)
  name: Initialize(Application)
  nameWithType: IApplicationComponent.Initialize(Application)
  fullName: SimulationFramework.IApplicationComponent.Initialize(SimulationFramework.Application)
  spec.csharp:
  - uid: SimulationFramework.IApplicationComponent.Initialize(SimulationFramework.Application)
    name: Initialize
    href: SimulationFramework.IApplicationComponent.html#SimulationFramework.IApplicationComponent.Initialize(SimulationFramework.Application)
  - name: (
  - uid: SimulationFramework.Application
    name: Application
    href: SimulationFramework.Application.html
  - name: )
  spec.vb:
  - uid: SimulationFramework.IApplicationComponent.Initialize(SimulationFramework.Application)
    name: Initialize
    href: SimulationFramework.IApplicationComponent.html#SimulationFramework.IApplicationComponent.Initialize(SimulationFramework.Application)
  - name: (
  - uid: SimulationFramework.Application
    name: Application
    href: SimulationFramework.Application.html
  - name: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: SimulationFramework.IApplicationComponent
  commentId: T:SimulationFramework.IApplicationComponent
  parent: SimulationFramework
  href: SimulationFramework.IApplicationComponent.html
  name: IApplicationComponent
  nameWithType: IApplicationComponent
  fullName: SimulationFramework.IApplicationComponent
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SimulationFramework
  commentId: N:SimulationFramework
  href: SimulationFramework.html
  name: SimulationFramework
  nameWithType: SimulationFramework
  fullName: SimulationFramework
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SimulationFramework.Drawing.IGraphicsProvider.GetFrameCanvas*
  commentId: Overload:SimulationFramework.Drawing.IGraphicsProvider.GetFrameCanvas
  href: SimulationFramework.Drawing.IGraphicsProvider.html#SimulationFramework.Drawing.IGraphicsProvider.GetFrameCanvas
  name: GetFrameCanvas
  nameWithType: IGraphicsProvider.GetFrameCanvas
  fullName: SimulationFramework.Drawing.IGraphicsProvider.GetFrameCanvas
- uid: SimulationFramework.Drawing.ICanvas
  commentId: T:SimulationFramework.Drawing.ICanvas
  parent: SimulationFramework.Drawing
  href: SimulationFramework.Drawing.ICanvas.html
  name: ICanvas
  nameWithType: ICanvas
  fullName: SimulationFramework.Drawing.ICanvas
- uid: SimulationFramework.Drawing.ITexture
  commentId: T:SimulationFramework.Drawing.ITexture
  parent: SimulationFramework.Drawing
  href: SimulationFramework.Drawing.ITexture.html
  name: ITexture
  nameWithType: ITexture
  fullName: SimulationFramework.Drawing.ITexture
- uid: SimulationFramework.Drawing.IGraphicsProvider.CreateTexture*
  commentId: Overload:SimulationFramework.Drawing.IGraphicsProvider.CreateTexture
  href: SimulationFramework.Drawing.IGraphicsProvider.html#SimulationFramework.Drawing.IGraphicsProvider.CreateTexture(System.Int32,System.Int32,System.Span{SimulationFramework.Color},SimulationFramework.Drawing.TextureOptions)
  name: CreateTexture
  nameWithType: IGraphicsProvider.CreateTexture
  fullName: SimulationFramework.Drawing.IGraphicsProvider.CreateTexture
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Span{SimulationFramework.Color}
  commentId: T:System.Span{SimulationFramework.Color}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<Color>
  nameWithType: Span<Color>
  fullName: System.Span<SimulationFramework.Color>
  nameWithType.vb: Span(Of Color)
  fullName.vb: System.Span(Of SimulationFramework.Color)
  name.vb: Span(Of Color)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: SimulationFramework.Color
    name: Color
    href: SimulationFramework.Color.html
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: SimulationFramework.Color
    name: Color
    href: SimulationFramework.Color.html
  - name: )
- uid: SimulationFramework.Drawing.TextureOptions
  commentId: T:SimulationFramework.Drawing.TextureOptions
  parent: SimulationFramework.Drawing
  href: SimulationFramework.Drawing.TextureOptions.html
  name: TextureOptions
  nameWithType: TextureOptions
  fullName: SimulationFramework.Drawing.TextureOptions
- uid: System.Span`1
  commentId: T:System.Span`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SimulationFramework.Drawing.IGraphicsProvider.LoadTexture*
  commentId: Overload:SimulationFramework.Drawing.IGraphicsProvider.LoadTexture
  href: SimulationFramework.Drawing.IGraphicsProvider.html#SimulationFramework.Drawing.IGraphicsProvider.LoadTexture(System.Span{System.Byte},SimulationFramework.Drawing.TextureOptions)
  name: LoadTexture
  nameWithType: IGraphicsProvider.LoadTexture
  fullName: SimulationFramework.Drawing.IGraphicsProvider.LoadTexture
- uid: System.Span{System.Byte}
  commentId: T:System.Span{System.Byte}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<byte>
  nameWithType: Span<byte>
  fullName: System.Span<byte>
  nameWithType.vb: Span(Of Byte)
  fullName.vb: System.Span(Of Byte)
  name.vb: Span(Of Byte)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: SimulationFramework.Drawing.IGraphicsProvider.ClearFontCache*
  commentId: Overload:SimulationFramework.Drawing.IGraphicsProvider.ClearFontCache
  href: SimulationFramework.Drawing.IGraphicsProvider.html#SimulationFramework.Drawing.IGraphicsProvider.ClearFontCache
  name: ClearFontCache
  nameWithType: IGraphicsProvider.ClearFontCache
  fullName: SimulationFramework.Drawing.IGraphicsProvider.ClearFontCache
